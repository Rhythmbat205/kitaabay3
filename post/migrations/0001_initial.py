# Generated by Django 3.0.7 on 2021-06-12 15:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import post.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(default='title', max_length=50, verbose_name='title')),
                ('creative_skills', multiselectfield.db.fields.MultiSelectField(choices=[('3D_Art', '3D Art'), ('3D_Modeling', '3D Modeling'), ('3D_Motion', '3D Motion'), ('Advertising', 'Advertising'), ('Photography', 'Photography'), ('Animation', 'Animation'), ('App_Design', 'App Design'), ('Apparel', 'Apparel'), ('AR/VR', 'AR/VR'), ('Architecture', 'Architecture'), ('Architecture_Concept', 'Architecture Concept'), ('Architecture_Photography', 'Architecture Photography'), ('Architecture_Visualization', 'Architecture Visualization'), ('Art_Direction', 'Art Direction'), ('Automotive_Design', 'Automotive Design'), ('Beauty_Photography', 'Beauty Photography'), ('Branding', 'Branding'), ('Calligraphy', 'Calligraphy'), ('CGI', 'CGI'), ('Character Design', 'Character Design'), ('Cinematography', 'Cinematography'), ('Collage', 'Collage'), ('Coloring', 'Coloring'), ('Comic', 'Comic'), ('Concept Art', 'Concept Art'), ('Copywriting', 'Copywriting'), ('Costume Design', 'Costume Design'), ('Crafts', 'Crafts'), ('Creative Direction', 'Creative Direction'), ('Culinary Arts', 'Culinary Arts'), ('Digital Art', 'Digital Art'), ('Digital Painting', 'Digital Painting'), ('Directing', 'Directing'), ('Drawing', 'Drawing'), ('Editing', 'Editing'), ('Editorial Design', 'Editorial Design'), ('Environmental Graphics', 'Environmental Graphics'), ('Exhibition Design', 'Exhibition Design'), ('Fashion', 'Fashion'), ('Fashion Design', 'Fashion Design'), ('Fashion Illustration', 'Fashion Illustration'), ('Fashion Photography', 'Fashion Photography'), ('Fashion Retouching', 'Fashion Retouching'), ('Fashion Styling', 'Fashion Styling'), ('Film', 'Film'), ('Fine Arts', 'Fine Arts'), ('Flower Arrangement', 'Flower Arrangement'), ('Food Photography', 'Food Photography'), ('Food Styling', 'Food Styling'), ('Furniture Design', 'Furniture Design'), ('Game Design', 'Game Design'), ('GIF Animation', 'GIF Animation'), ('Graffiti', 'Graffiti'), ('Graphic Design', 'Graphic Design'), ('Icon Design', 'Icon Design'), ('Illustration', 'Illustration'), ('Industrial Design', 'Industrial Design'), ('Infographic', 'Infographic'), ('Information Architecture', 'Information Architecture'), ('Interaction Design', 'Interaction Design'), ('Interior Design', 'Interior Design'), ('Jewelry Design', 'Jewelry Design'), ('Label Design', 'Label Design'), ('Landscape Design', 'Landscape Design'), ('Lettering', 'Lettering'), ('Logo Design', 'Logo Design'), ('Makeup', 'Makeup'), ('Makeup Arts', 'Makeup Arts'), ('Model Test Photography', 'Model Test Photography'), ('Modeling', 'Modeling'), ('Motion Graphics', 'Motion Graphics'), ('Music', 'Music'), ('Music Packaging', 'Music Packaging'), ('Packaging', 'Packaging'), ('Painting', 'Painting'), ('Paperworks', 'Paperworks'), ('Pattern Design', 'Pattern Design'), ('Performing Arts', 'Performing Arts'), ('Photography', 'Photography'), ('Photography Styling', 'Photography Styling'), ('Photojournalism', 'Photojournalism'), ('Poster Design', 'Poster Design'), ('Product Design', 'Product Design'), ('Product Photography', 'Product Photography'), ('Programming', 'Programming'), ('Projection Mapping', 'Projection Mapping'), ('Props Design', 'Props Design'), ('Retouching', 'Retouching'), ('Sculpting', 'Sculpting'), ('Set Design', 'Set Design'), ('Shoe Design', 'Shoe Design'), ('Sketching', 'Sketching'), ('Sound Design', 'Sound Design'), ('Storyboarding', 'Storyboarding'), ('Street Art', 'Street Art'), ('Students', 'Students'), ('Styleframing', 'Styleframing'), ('Surface Design', 'Surface Design'), ('T-Shirt Design', 'T-Shirt Design'), ('Textile Design', 'Textile Design'), ('Toy Design', 'Toy Design'), ('Type Design', 'Type Design'), ('Typography', 'Typography'), ('UI/UX', 'UI/UX'), ('Visual Effects', 'Visual Effects'), ('Visualization', 'Visualization'), ('Web Design', 'Web Design'), ('Window Design', 'Window Design'), ('Woodworking', 'Woodworking'), ('Writing', 'Writing')], default='Graphics', max_length=1472)),
                ('caption', models.TextField(max_length=1500, verbose_name='Caption')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('likes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=75, verbose_name='Tag')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('following', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stream_following', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='post.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostFileContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=post.models.user_directory_path)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='content',
            field=models.ManyToManyField(related_name='contents', to='post.PostFileContent'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(related_name='tags', to='post.Tag'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_like', to='post.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_like', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
